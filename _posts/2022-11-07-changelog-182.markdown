---
layout: post
title: "IntelliJ Rust Changelog #182"
date: 2022-11-07 13:00:00 +0300
---


## New Features

* [#8755] Support `let_chains` (by [@Kobzol])

* [#9105] Allow to run a specific [documentation test](https://doc.rust-lang.org/rustdoc/write-documentation/documentation-tests.html) [all the ways](https://plugins.jetbrains.com/plugin/8182-rust/docs/rust-testing.html) you can run a usual test (by [@Kobzol])

  {% include gif-img.html path="/assets/posts/changelog-182/run_doctest" w="700px" %}

* [#9349] Decorate MSVC type names when rendering values in the debugger on Windows. Now the Rust type names containing MSVC-specific wrappers are rendered properly, e.g. `tuple$<Foo, ref$<Bar>>` is replaced by `(Foo, &Bar)`.
  This feature can be disabled via the `Decorate MSVC type names` checkbox in the `File | Settings | Build, Execution, Deployment | Debugger | Data Views | Rust` settings

  <img src="/assets/posts/changelog-182/msvc_decorators.png" width="700px"/>

* [#7134] Add a quick-fix to generate missing trait member definitions in trait implementations (by [@Sejsel])

  {% include gif-img.html path="/assets/posts/changelog-182/add_definition_to_trait" w="700px" %}

* Procedural macro support improvements:
  * [#9615] Split `org.rust.macros.proc` experimental feature into sub-features:
    - `org.rust.macros.proc.function-like` enables [function-like] procedural macros expansion
    - `org.rust.macros.proc.derive` enables [derive] procedural macro expansion
    - `org.rust.macros.proc.attr` enables [attribute] procedural macro expansion
    - `org.rust.macros.proc` enables all the above
  Note, since the procedural macro support is still experimental, these features are disabled by default. You can turn them on via `Help | Find Action | Experimental Features` dialog

  * [#9628] Enable the expansion of [function-like] procedural macros in the [nightly builds].
    For more information, check the [implementation PR](https://github.com/intellij-rust/intellij-rust/pull/6564) and the corresponding [tracking issue](https://github.com/intellij-rust/intellij-rust/issues/6908).

  * [#9614] Fix the expansion of [attribute] and [derive] procedural macros inside functions

  * [#9559] Fix duplicate completion for already imported [attribute] procedural macros

  * [#9526] Insert brackets of the proper form (`()`, `[]` or `{}`, depending on the macro's documentation) when completing procedural macro calls

* [#9650] Increase the minimal supported version of Rust to 1.56

* [#8916] Fix emulating terminal in output console in some cases

## Fixes

* Type inference fixes:
  * [#9598], [#9639] Fix false-positive `trait bound is not satisfied E0277` annotations.
    Infer types properly when there are trait bounds on the `Self` type
   
  * [#9552] Properly infer type of custom macros that shadow built-in macros

  * [#7450] Properly infer array size when it refers to a constant (by [@Kobzol])

  * [#9586] Infer const arguments in struct literal paths

  * [#9620] Normalize associated type in `impl` item trait reference

  * [#9631] Fix type inference in the case of normalizable associated type projections like `<A as B>::C`

* [#9637] Fix [build script] evaluation failure when the native helper binary was not found

* [#9627] Do not show line markers for tests in dependence crates

* [#9562] Fix `Create module file` quick-fix in 2022.3 EAPs

* [#9556] Temporary disable `Insert imports on paste` feature because it may be slow when copying large code fragments.
  The corresponding option is located in `Preferences | Editor | General | Auto Import | Rust` settings

* [#9550] Do not resolve and complete macros after `::` when Rust edition 2018 or later is used

* [#9469] Fix randomly appearing false-positive `Variable is never used` annotation when the variable is only used in a macro call

* [#9170] Fix completion for raw identifiers inside `use` declarations (by [@Stzx])

Full set of changes can be found [here](https://github.com/intellij-rust/intellij-rust/milestone/91?closed=1)

[@Kobzol]: https://github.com/Kobzol
[@Sejsel]: https://github.com/Sejsel
[@Stzx]: https://github.com/Stzx

[#7134]: https://github.com/intellij-rust/intellij-rust/pull/7134
[#7450]: https://github.com/intellij-rust/intellij-rust/pull/7450
[#8755]: https://github.com/intellij-rust/intellij-rust/pull/8755
[#8916]: https://github.com/intellij-rust/intellij-rust/pull/8916
[#9105]: https://github.com/intellij-rust/intellij-rust/pull/9105
[#9170]: https://github.com/intellij-rust/intellij-rust/pull/9170
[#9349]: https://github.com/intellij-rust/intellij-rust/pull/9349
[#9469]: https://github.com/intellij-rust/intellij-rust/pull/9469
[#9526]: https://github.com/intellij-rust/intellij-rust/pull/9526
[#9550]: https://github.com/intellij-rust/intellij-rust/pull/9550
[#9552]: https://github.com/intellij-rust/intellij-rust/pull/9552
[#9556]: https://github.com/intellij-rust/intellij-rust/pull/9556
[#9559]: https://github.com/intellij-rust/intellij-rust/pull/9559
[#9562]: https://github.com/intellij-rust/intellij-rust/pull/9562
[#9586]: https://github.com/intellij-rust/intellij-rust/pull/9586
[#9598]: https://github.com/intellij-rust/intellij-rust/pull/9598
[#9614]: https://github.com/intellij-rust/intellij-rust/pull/9614
[#9615]: https://github.com/intellij-rust/intellij-rust/pull/9615
[#9620]: https://github.com/intellij-rust/intellij-rust/pull/9620
[#9627]: https://github.com/intellij-rust/intellij-rust/pull/9627
[#9628]: https://github.com/intellij-rust/intellij-rust/pull/9628
[#9631]: https://github.com/intellij-rust/intellij-rust/pull/9631
[#9637]: https://github.com/intellij-rust/intellij-rust/pull/9637
[#9639]: https://github.com/intellij-rust/intellij-rust/pull/9639
[#9650]: https://github.com/intellij-rust/intellij-rust/pull/9650

[function-like]: https://doc.rust-lang.org/reference/procedural-macros.html#function-like-procedural-macros
[derive]: https://doc.rust-lang.org/reference/procedural-macros.html#derive-macros
[attribute]: https://doc.rust-lang.org/reference/procedural-macros.html#attribute-macros
[nightly builds]: https://plugins.jetbrains.com/plugin/8182-rust/docs/rust-quick-start.html#install-nightly
[build script]: https://doc.rust-lang.org/cargo/reference/build-scripts.html
